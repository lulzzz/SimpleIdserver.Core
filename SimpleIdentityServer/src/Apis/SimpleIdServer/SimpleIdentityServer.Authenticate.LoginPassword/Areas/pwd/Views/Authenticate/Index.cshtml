@using SimpleIdentityServer.Host

@{
    ViewBag.Title = "Authenticate";
    var loginState = ViewData.ModelState["Login"];
    var passwordState = ViewData.ModelState["Password"];
}

@model SimpleIdentityServer.Authenticate.Basic.ViewModels.AuthorizeViewModel

@section PageTitle
    {
    <h1>
        @ViewBag.Translations["login"]
    </h1>
}

<div class="row">
    <div class="col-md-6">
        <div>
            <h2>
                @ViewBag.Translations["login_external_account"]
            </h2>
        </div>
        <div>
            @if (!Model.IdProviders.Any())
            {
                <p>There is no external authentication services configured</p>
            }
            else
            {
                using (Html.BeginForm("ExternalLogin", "Authenticate"))
                {
                    foreach (var loginProvider in Model.IdProviders)
                    {
                        <button type="submit" class="btn btn-default" id="@loginProvider.AuthenticationScheme" name="provider" value="@loginProvider.AuthenticationScheme" title="Log in using your @loginProvider.AuthenticationScheme account">@loginProvider.DisplayName</button>
                    }
                }
            }
        </div>
    </div>
    <div class="col-md-6">
        <div>
            <h2>
                @ViewBag.Translations["login_local_account"]
            </h2>
        </div>
        <div>
            @Html.ValidationMessage("invalid_credentials")
            <form name="form" method="POST" action="@Url.Action("LocalLogin")">
                <fieldset>
                    @if (loginState != null && loginState.Errors.Any())
                    {
                        <div class="form-group has-error">
                            <label class="control-label">@ViewBag.Translations["username"]</label>
                            <span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="right" title="@string.Join(",", loginState.Errors.Select(e => e.ErrorMessage))"></span>
                            <input maxlength="100" class="form-control" name="Login" type="text" />
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <label class="control-label">@ViewBag.Translations["username"]</label>
                            <input maxlength="100" class="form-control" name="Login" type="text" />
                        </div>
                    }

                    @if (passwordState != null && passwordState.Errors.Any())
                    {
                        <div class="form-group has-error">
                            <label class="control-label">@ViewBag.Translations["password"]</label>
                            <span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="right" title="@string.Join(",", passwordState.Errors.Select(e => e.ErrorMessage))"></span>
                            <input maxlength="100" class="form-control" name="Password" type="password" />
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <label class="control-label">@ViewBag.Translations["password"]</label>
                            <input maxlength="100" class="form-control" name="Password" type="password" />
                        </div>
                    }

                    <div class="form-group">
                        <label>
                            <input type="checkbox" name="IsChecked" />
                            <strong>@ViewBag.Translations["remember_my_login"]</strong>
                        </label>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">@ViewBag.Translations["login"]</button>
                    </div>
                </fieldset>
            </form>
        </div>
    </div>
</div>