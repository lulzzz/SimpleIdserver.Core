@{
    ViewBag.Title = "Renew password";
    var actualPasswordState = ViewData.ModelState["ActualPassword"];
    var confirmActualPasswordState = ViewData.ModelState["ConfirmActualPassword"];
    var newPasswordState = ViewData.ModelState["NewPassword"];
    var confirmNewPasswordState = ViewData.ModelState["ConfirmNewPassword"];
}

@model SimpleIdServer.Authenticate.LoginPassword.ViewModels.RenewPasswordViewModel

@section PageTitle
{
    <h1>
        @ViewBag.Translations["renew_password"]
    </h1>
}

<div class="panel panel-default">
    <div class="panel-body">
        @using (Html.BeginForm("ChangePassword", "Authenticate", new { area = "pwd" }, FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <!-- Actual password -->            
            @if (actualPasswordState != null && actualPasswordState.Errors.Any())
            {
                <div class="form-group has-error">
                    <label class="control-label">@ViewBag.Translations["actual_password"]</label>
                    <span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="right" title="@string.Join(",", actualPasswordState.Errors.Select(e => e.ErrorMessage))"></span>                            
                    <input maxlength="100" class="form-control" name="ActualPassword" type="password" />
                </div> 
            }
            else
            {
                <div class="form-group">
                    <label class="control-label">@ViewBag.Translations["actual_password"]</label>
                    <input maxlength="100" class="form-control" name="ActualPassword" type="password" />
                </div>                
            }

            <!-- Confirm actual password -->
            @if (confirmActualPasswordState != null && confirmActualPasswordState.Errors.Any())
            {                 
                <div class="form-group has-error">
                    <label class="control-label">@ViewBag.Translations["confirm_actual_password"]</label>
                    <span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="right" title="@string.Join(",", confirmActualPasswordState.Errors.Select(e => e.ErrorMessage))"></span>
                    <input maxlength="100" class="form-control" name="ConfirmActualPassword" type="password" />
                </div> 
            }
            else
            {               
                <div class="form-group">
                    <label class="control-label">@ViewBag.Translations["confirm_actual_password"]</label>
                    <input maxlength="100" class="form-control" name="ConfirmActualPassword" type="password" />
                </div> 
            }

            <!-- New password -->
            @if (newPasswordState != null && newPasswordState.Errors.Any())
            {
                <div class="form-group has-error">
                    <label class="control-label">@ViewBag.Translations["new_password"]</label>
                    <span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="right" title="@string.Join(",", newPasswordState.Errors.Select(e => e.ErrorMessage))"></span>
                    <input maxlength="100" class="form-control" name="NewPassword" type="password" />
                </div>
            }
            else
            {
                <div class="form-group">
                    <label class="control-label">@ViewBag.Translations["new_password"]</label>
                    <input maxlength="100" class="form-control" name="NewPassword" type="password" />
                </div>                
            }

            <!-- Confirm new password -->
             @if (confirmNewPasswordState != null && confirmNewPasswordState.Errors.Any())
             {
                 
                <div class="form-group has-error">
                    <label class="control-label">@ViewBag.Translations["confirm_new_password"]</label>
                    <span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="right" title="@string.Join(",", confirmNewPasswordState.Errors.Select(e => e.ErrorMessage))"></span>
                    <input maxlength="100" class="form-control" name="ConfirmNewPassword" type="password" />
                </div>
             }
             else
             {
                <div class="form-group">
                    <label class="control-label">@ViewBag.Translations["confirm_new_password"]</label>
                    <input maxlength="100" class="form-control" name="ConfirmNewPassword" type="password" />
                </div>
             }

             
            <input type="hidden" name="Code" value="@Model.Code" />
            <button type="submit" class="btn btn-primary">@ViewBag.Translations["update"]</button>
        }
    </div>
</div>