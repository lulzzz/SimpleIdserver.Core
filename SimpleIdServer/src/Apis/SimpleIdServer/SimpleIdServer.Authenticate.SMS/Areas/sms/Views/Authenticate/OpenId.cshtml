@{
    ViewBag.Title = "Authenticate";
    var phoneNumberState = ViewData.ModelState["PhoneNumber"];
}
@model SimpleIdServer.Authenticate.Basic.ViewModels.AuthorizeOpenIdViewModel
@section PageTitle
    {
    <h1>
        @ViewBag.Translations["login"]
    </h1>
}
<div class="row">
    <div class="col-md-6">
        <div>
            <h2>
                @ViewBag.Translations["login_external_account"]
            </h2>
        </div>
        <div>
            @if (!Model.IdProviders.Any())
            {
                <p>There is no external authentication services configured</p>
            }
            else
            {
                using (Html.BeginForm("ExternalLoginOpenId", "Authenticate", new { code = Model.Code, area = "sms" }))
                {
                    foreach (var loginProvider in Model.IdProviders)
                    {
                        <button type="submit" class="btn btn-default" id="@loginProvider.AuthenticationScheme" name="provider" value="@loginProvider.AuthenticationScheme" title="Log in using your @loginProvider.AuthenticationScheme account">@loginProvider.DisplayName</button>
                    }
                }
            }
        </div>
    </div>
    <div class="col-md-6">
        <div>
            <h2>
                @ViewBag.Translations["login_local_account"]
            </h2>
        </div>
        <div>
            @Html.ValidationMessage("message_error")
            <form name="form" method="POST" action="@Url.Action("LocalLoginOpenId", "Authenticate", new { area = "sms" })">
                <fieldset>
                    <input type="hidden" value="@Model.Code" name="Code" />
                    @if (phoneNumberState != null && phoneNumberState.Errors.Any())
                    {
                        <div class="form-group has-error">
                            <label class="control-label">@ViewBag.Translations["phone"]</label>
                            <span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="right" title="@string.Join(",", phoneNumberState.Errors.Select(e => e.ErrorMessage))"></span>
                            <input maxlength="100" class="form-control" name="PhoneNumber" type="text" />
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <label class="control-label">@ViewBag.Translations["phone"]</label>
                            <input maxlength="100" class="form-control" name="PhoneNumber" type="text" />
                        </div>
                    }
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">@ViewBag.Translations["login"]</button>
                    </div>
                </fieldset>
            </form>
        </div>
    </div>
</div>